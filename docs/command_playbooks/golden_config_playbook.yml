---
- name: Load a Golden config on the ASA
  hosts: all
  connection: local
  vars:
    # Random number to append to backup filename for each playbook run
    random_number: "{{ 10000 | random }}"

  tasks:
    #############################################################################
    # Backup the current running config before we make any changes
    - name: Backup the running config to flash before we make any changes
      when: hostvars[inventory_hostname].device_type == "asa" or hostvars[inventory_hostname].device_type == "ios"
      cisco.cdo.cmd:
        api_key: "{{ lookup('ansible.builtin.env', 'CDO_API_KEY') }}"
        region: "{{ lookup('ansible.builtin.env', 'CDO_REGION') }}"
        exec_command:
          device_name: "{{ inventory_hostname }}"
          cmd_list:
            - "copy /noconfirm running-config flash:/{{ ansible_date_time.date }}-{{ random_number }}-backup.cfg"
      register: command_output
      failed_when: (command_output.stderr is defined) and (command_output.stderr | length > 0)
    - name: Print backup results
      ansible.builtin.debug:
        msg: "File flash:/{{ ansible_date_time.date }}-{{ random_number }}-backup.cfg backed up: {{ command_output }}"

    #############################################################################
    # Next, clear the configuration for the config elements we wish to reset
    - name: Issue ASA/IOS clear config commands and "no" CLI Commands and return output if any
      when: hostvars[inventory_hostname].device_type == "asa" or hostvars[inventory_hostname].device_type == "ios"
      cisco.cdo.cmd:
        api_key: "{{ lookup('ansible.builtin.env', 'CDO_API_KEY') }}"
        region: "{{ lookup('ansible.builtin.env', 'CDO_REGION') }}"
        clear_config:
          device_name: "{{ inventory_hostname }}"
          access_lists: "{{ hostvars[inventory_hostname].clear_config.access_lists | default(omit) }}"
          interfaces: "{{ hostvars[inventory_hostname].clear_config.interfaces | default(omit) }}"
      register: clear_config_output
      failed_when: (clear_config_output.stderr is defined) and (clear_config_output.stderr | length > 0)

    - name: Print results
      ansible.builtin.debug:
        msg: "{{ clear_config_output }}"

    #############################################################################
    # Finally, Apply the "golden config" from the inventory file to the device
    - name: Run ASA/IOS CLI Commands and return output if any
      when: hostvars[inventory_hostname].device_type == "asa" or hostvars[inventory_hostname].device_type == "ios"
      cisco.cdo.cmd:
        api_key: "{{ lookup('ansible.builtin.env', 'CDO_API_KEY') }}"
        region: "{{ lookup('ansible.builtin.env', 'CDO_REGION') }}"
        load_config:
          device_name: "{{ inventory_hostname }}"
          config: "{{ hostvars[inventory_hostname].config }}"
      register: command_output
      failed_when: (command_output.stderr is defined) and (command_output.stderr | length > 0)

    - name: Print results
      ansible.builtin.debug:
        msg: "{{ command_output }}"
