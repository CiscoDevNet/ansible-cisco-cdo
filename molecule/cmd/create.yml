---
# OK this is working. now we need to either clone the work and chagne branches or clone the dev dir to the container
- name: Create
  hosts: localhost
  gather_facts: false
  vars:
    molecule_inventory:
      all:
        hosts: {}
        molecule: {}
  tasks:
    # https://github.com/ansible/molecule-cookiecutter/blob/master/%7B%7Bcookiecutter.role_name%7D%7D/molecule/%7B%7Bcookiecutter.scenario_name%7D%7D/create.yml
    - name: Create Containerfile from image names
      template:
        src: "{{ molecule_scenario_directory }}/Containerfile.j2"
        dest: "{{ molecule_ephemeral_directory }}/Containerfile_{{ item.image | regex_replace('[^a-zA-Z0-9_]', '_') }}.j2"
      with_items: "{{ molecule_yml.platforms }}"
      register: platforms

    - name: Copy requirements into the podman build dir
      template:
        src: "requirements.txt"
        dest: "{{ molecule_ephemeral_directory }}/requirements.txt"
      with_items: "{{ molecule_yml.platforms }}"
      register: platforms

    - name: Build container from Containerfile
      containers.podman.podman_image:
        path: "{{ molecule_ephemeral_directory }}"
        # name: "molecule_local/{{ item.item.image }}"
        name: "localhost/{{ item.item.image }}"
        build:
          file: "{{ item.item.containerfile | default(item.invocation.module_args.dest) }}"
          format: "docker"
        force: "{{ item.item.force | default(True) }}"
      with_items: "{{ platforms.results }}"
      when: platforms.changed

    - name: Create molecule instance(s)
      containers.podman.podman_container:
        name: "{{ item.name }}"
        hostname: "{{ item.name }}"
        # image: "molecule_local/{{ item.image }}"
        image: "localhost/{{ item.image }}"
        state: started
        recreate: false
        log_driver: json-file
        command: "{{ item.command | default('sleep infinity') }}"
        privileged: "{{ item.privileged | default(omit) }}"
        volumes: "{{ item.volumes | default(omit) }}"
        capabilities: "{{ item.capabilities | default(omit) }}"
      with_items: "{{ molecule_yml.platforms }}"

#     - name: Create a container
#       containers.podman.podman_container:
#         name: "{{ item.name }}"
#         image: "{{ item.image }}"
#         state: started
#         command: sleep 1d
#         # bash -c "while true; do sleep 10000; done"
#         log_driver: json-file
#       register: result
#       loop: "{{ molecule_yml.platforms }}"
#
#     - name: Print some info
#       ansible.builtin.debug:
#         msg: "{{ result.results }}"
#
#     - name: Fail if container is not running
#       when: >
#         item.container.State.ExitCode != 0 or
#         not item.container.State.Running
#       ansible.builtin.include_tasks:
#         file: tasks/create-fail.yml
#       loop: "{{ result.results }}"
#       loop_control:
#         label: "{{ item.container.Name }}"
#
#     - name: Add container to molecule_inventory
#       vars:
#         inventory_partial_yaml: |
#           all:
#             children:
#               molecule:
#                 hosts:
#                   "{{ item.name }}":
#                     ansible_connection: containers.podman.podman
#       ansible.builtin.set_fact:
#         molecule_inventory: >
#           {{ molecule_inventory | combine(inventory_partial_yaml | from_yaml, recursive=true) }}
#       loop: "{{ molecule_yml.platforms }}"
#       loop_control:
#         label: "{{ item.name }}"
#
#     - name: Dump molecule_inventory
#       ansible.builtin.copy:
#         content: |
#           {{ molecule_inventory | to_yaml }}
#         dest: "{{ molecule_ephemeral_directory }}/inventory/molecule_inventory.yml"
#         mode: "0600"
#
#     - name: Force inventory refresh
#       ansible.builtin.meta: refresh_inventory
#
#     - name: Fail if molecule group is missing
#       ansible.builtin.assert:
#         that: "'molecule' in groups"
#         fail_msg: |
#           molecule group was not found inside inventory groups: {{ groups }}
#       run_once: true # noqa: run-once[task]
#
# # we want to avoid errors like "Failed to create temporary directory"
# - name: Validate that inventory was refreshed
#   hosts: molecule
#   gather_facts: false
#   tasks:
#     - name: Check uname
#       ansible.builtin.raw: uname -a
#       register: result
#       changed_when: false
#
#     - name: Display uname info
#       ansible.builtin.debug:
#         msg: "{{ result.stdout }}"
